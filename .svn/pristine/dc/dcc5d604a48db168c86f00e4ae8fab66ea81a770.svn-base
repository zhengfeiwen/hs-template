<template>
  <div class="center-container">
    <header>
        <hs-form ref="form" :model="form" label-width="98px" :inline="true">
          <hs-form-item label="所属中心代码">
            <hs-input size="mini" v-model="form.centerCode" placeholder="请输入所属中心代码" ></hs-input>
          </hs-form-item>
          <hs-form-item label="所属中心名称">
            <hs-input size="mini" v-model="form.centerName" placeholder="请输入所属中心名称" ></hs-input>
          </hs-form-item>
          <hs-form-item label="所属中心状态">
            <dict-select :val.sync="form.status" constant-group-name="status"></dict-select>
          </hs-form-item>
          <hs-form-item label="业务类型">
            <dict-select :val.sync="form.businessId" constant-group-name="businessType"></dict-select>
          </hs-form-item>
          <hs-form-item class="query-block">
            <hs-button type="primary" @click="onQuery" size="mini" icon="hs-icon-search">查询</hs-button>
            <hs-button type="default" @click="onReset" size="mini" icon="hs-icon-refresh-right">重置</hs-button>
          </hs-form-item>
        </hs-form>
      </header>
      <section>
        <simple-table :index="!0" :isCheckbox="!1" :data="tableData" :columns="columns" :loading="loading" @query="onQuery" :pagination.sync="pagination" :dicts="['schoolState']">
          <template slot="operator" slot-scope="{ scope }">
            <hs-button
              @click.native.prevent="showDetail(scope.row)"
              type="text"
              size="small">
              详情
            </hs-button>
          </template>
        </simple-table>
      </section>
  </div>
</template>

<script lang="ts">
import { Vue, Component } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import DetailDialog from '@/components/busi/table/detail.vue'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import Tree from '@/components/busi/custom/tree.vue'
import util from '@/utils/busi/util'
import { centerList, centerCount, centerDetail } from '@/api/base'
@Component({
  name: 'center-search',
  components: {
    SimpleTable,
    DetailDialog,
    DictSelect,
    Tree
  }
})
export default class CenterSearch extends Vue {
  private form = {
    status: 1,
    centerCode: '',
    centerName: '',
    business: ''
  }

  private loading = !1

  private tableData = {
    list: [],
    totalCount: 0
  }

  private columns = [{
    prop: 'centerCode',
    label: '所属中心代码'
  },
  {
    prop: 'centerName',
    label: '所属中心名称'
  },
  {
    prop: 'provinceName',
    label: '所属省份'
  },
  {
    prop: 'cityName',
    label: '所属城市'
  },
  {
    prop: 'statusName',
    label: '所属中心状态',
    default: ['status']
  },
  {
    prop: 'businessName',
    label: '业务名称',
    default: ['business']
  }]

  private pagination: any = {
    currentPage: 1,
    pageSize: 10
  }

  private async onQuery (pagination: any = null) {
    this.loading = !0
    const form = util.trimForm({ ...this.form })
    !pagination && (this.pagination.currentPage = 1)
    await centerList({
      ...form,
      ...pagination || this.pagination
    }).then(async (res: any) => {
      await centerCount({
        ...form
      }).then((resCnt: any) => {
        this.loading = !1
        this.tableData.list = res.object.list
        this.tableData.totalCount = resCnt.object.totalCount
      }).catch((err: any) => {
        console.log('err', err)
        this.loading = !1
      })
    }).catch((err: any) => {
      console.log('err', err)
      this.loading = !1
    })
  }

  private onReset () {
    this.form = {
      status: 1,
      centerCode: '',
      centerName: '',
      business: ''
    }
    this.onQuery()
  }

  private currentPage = 1

  private visible = !1

  private detailData = {}

  private async showDetail (row: any) {
    await centerDetail({ id: row.id }).then((res: any) => {
      if (res.code === 10000) {
        this.visible = !0
        this.detailData = {
          centerCode: res.object.info.centerCode,
          centerName: res.object.info.centerName,
          provinceName: res.object.info.provinceName,
          cityName: res.object.info.cityName,
          businessName: res.object.info.businessName
        }
      }
    })
  }

  mounted () {
    this.onQuery()
  }
}
</script>

<style lang="scss" scoped>
@import "./index";
</style>
