<template>
  <el-dialog title="预付流水详情" append-to-body :visible.sync="visible" :before-close="onClose" width="1000px" @open="open()">
    <div class="collect-detail-container">
        <div class="header">
            <div class="line">
                <i class="hs-icon-user" /><span class="student-name">{{ info.stuName }}</span>
            </div>
            <div class="line">
                <static-item label="性别">{{ info.sexName }}</static-item>
                <static-item label="证件号" style="white-space: nowrap;">{{ info.idCard }}</static-item>
            </div>
        </div>
        <section>
          <div class="line">
            <static-item label="流水号">{{ info.billNo }}</static-item>
            <static-item label="创建时间">{{ timeConvert(info.createTime) }}</static-item>
            <static-item label="流水状态">{{ info.statusName }}</static-item>
            <static-item label="操作人">{{ info.createName }}</static-item>
          </div>
          <div class="line">
            <static-item label="缴费时间">{{ timeConvert(info.payTime) }}</static-item>
            <static-item label="缴费类型">预交</static-item>
            <static-item label="一次性收费">{{ info.collectYearName }}</static-item>
          </div>
          <div class="subtitle">缴费明细</div>
          <hs-table
            id="prepaidTable"
            :data="list"
            :border="!0"
            :show-summary="!0"
            :summary-method="getSummaries"
            style="width: 100%"
            :loading="loading"
            header-row-class-name="header-style">
              <hs-table-column align="center" prop="businessName" label="缴费业务"></hs-table-column>
              <hs-table-column align="center" prop="schoolName" label="缴费院校"></hs-table-column>
              <hs-table-column align="center" prop="gradeName" label="缴费年级"></hs-table-column>
              <hs-table-column align="center" prop="subjectName" label="缴费专业"></hs-table-column>
              <hs-table-column align="center" prop="feeItemName" label="收费项目"></hs-table-column>
              <hs-table-column align="center" prop="schoolYearName" label="学年"></hs-table-column>
              <hs-table-column align="center" prop="feeMustName" label="必缴"></hs-table-column>
              <hs-table-column align="right" prop="receivableAmount" :formatter="formatterMoney" label="应收"></hs-table-column>
              <hs-table-column align="right" prop="alreadyReductionAmount" :formatter="formatterMoney" label="已减免"></hs-table-column>
              <hs-table-column align="right" prop="alreadyRefundAmount" :formatter="formatterMoney" label="已退"></hs-table-column>
              <hs-table-column align="right" prop="acceptedAmount" :formatter="formatterMoney" label="已收"></hs-table-column>
              <hs-table-column align="right" prop="payAmount" :formatter="formatterMoney" label="本次预交"></hs-table-column>
              <hs-table-column align="right" prop="amount" :formatter="formatterMoney" label="本次到账"></hs-table-column>
            </hs-table>
          <div class="subtitle">收费方式</div>
            <hs-table :loading="loading" :data="[info]" style="width: 100%" :border="!0">
              <hs-table-column
                prop="cash"
                label="现金"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="brushCard"
                label="刷卡"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="transferMoney"
                label="转账"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="aliPay"
                label="支付宝"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="wechatPay"
                label="微信"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="oneCodePay"
                label="一码通"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="payPlatform"
                label="缴平台"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="xtPay"
                label="秀推"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="wechatOnlinePay"
                label="在线支付"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
              <hs-table-column
                prop="payAmount"
                label="本次预收款"
                align="right"
                :formatter="formatterMoney">
              </hs-table-column>
            </hs-table>
            <div class="line auto">
              <el-tooltip class="item" effect="dark" content="勾选项本次应收之和" placement="top"><i class="hs-icon-warning" /></el-tooltip>
              <static-item label="本次应收">{{ generatingThousandthPer(info.receivableAmount) }}</static-item>
              <el-tooltip class="item" effect="dark" content="本次预交款=收款方式缴费金额" placement="top"><i class="hs-icon-warning" /></el-tooltip>
              <static-item label="本次预收款">{{ generatingThousandthPer(info.payAmount) }}</static-item>
              <el-tooltip class="item" effect="dark" content="本次产生余额=本次预收款-本次预交合计" placement="top"><i class="hs-icon-warning" /></el-tooltip>
              <static-item label="本次产生余额">{{ generatingThousandthPer(info.accountAmount) }}</static-item>
            </div>
            <div>
              流水摘要：{{ info.remark }}
            </div>
          </section>
        <div slot="footer" class="dialog-footer">
          <el-button type="danger" size="mini" @click="onPrint">打印</el-button>
          <el-button type="info" size="mini" plain @click="onClose">关闭</el-button>
        </div>
        <!-- print -->
        <print-receipt
          z-index="1005"
          :receiptVisible="receiptVisible"
          :handleClose="receiptClose"
          :collectFeesCode="turnoverID"
          @callback="receiptClose"
        />
        <!-- print -->
      </div>
  </el-dialog>
</template>
<script lang='ts'>
import { Component, Prop, Vue } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import StaticItem from '@/components/busi/staticitem.vue'
import util from '@/utils/busi/util'
import { studentApi } from '@/api/studentcenter'
import PrintReceipt from '@/components/PrintReceipt/index.vue'// 打印小票
import dayjs from 'dayjs'
@Component({
  name: 'collect-detail',
  components: {
    SimpleTable,
    StaticItem,
    PrintReceipt
  }
})
export default class extends Vue {
  @Prop({ default: false }) private flowId!: number;

  @Prop({ default: false }) private isAmateur!: boolean;

  @Prop({ default: false }) private visible!: boolean;

  private info = {}

  private list = []

  private loading = !1

  private turnoverID = '' // 流水ID
  // 打印小票显示
  private receiptVisible = false
  // 打印小票相关
  private receiptClose () { this.receiptVisible = false }
  private onPrint () {
    this.receiptVisible = true
    this.turnoverID = this.flowId + ''
  }

  private async getPrepaidProcessedDetail () {
    await studentApi(this.isAmateur ? 'amateurRepaidProcessedDetail' : 'prepaidProcessedDetail', {
      id: this.flowId
    }).then((res: any) => {
      this.list = res.object.list
      this.info = res.object.info
      this.loading = !1
    }).catch((err: any) => {
      console.log('err', err)
    })
  }

  private getSummaries (param: any) {
    const { columns, data } = param
    const sums:any = {}
    columns.forEach((column: { property: string|number }, index: number) => {
      if (index === 0) {
        sums[index] = '合计'
        return
      }
      const values = data.map((item: { [x: string]: any }) => Number(item[column.property]))
      if (!values.every((value: number) => isNaN(value))) {
        sums[index] = values.reduce((prev: any, curr: any) => {
          const value = Number(curr)
          if (!isNaN(value)) {
            return prev + curr
          } else {
            return prev
          }
        }, 0)
        sums[index] = util.generatingThousandthPer(sums[index])
      } else {
        sums[index] = ''
      }
    })
    return sums
  }

  private timeConvert (timeStamp: number) {
    return !timeStamp ? '' : dayjs(timeStamp).format('YYYY-MM-DD HH:mm')
  }

  private formatterMoney (row: any, column: any, cellValue: any) {
    return util.generatingThousandthPer(cellValue)
  }

  private generatingThousandthPer (value: any) {
    return util.generatingThousandthPer(value)
  }

  private setColSpan () {
    setTimeout(() => {
      if (document.querySelector('#prepaidTable')) {
        var current = (document as any)
          .querySelector('#prepaidTable')
          .querySelector('.el-table__footer-wrapper')
          .querySelector('.el-table__footer')
        var cell = current.rows[0].cells
        cell[0].colSpan = '7'
        cell[1].style.display = 'none'
        cell[2].style.display = 'none'
        cell[3].style.display = 'none'
        cell[4].style.display = 'none'
        cell[5].style.display = 'none'
        cell[6].style.display = 'none'
      }
    }, 50)
  }

  private clear () {
    this.list = []
    this.info = {}
    this.loading = !1
  }

  private onClose () {
    this.clear()
    this.$emit('update:visible', false)
  }

  // public mounted (): void {
  // }

  public open (): void {
    this.loading = !0
    this.setColSpan()
    this.getPrepaidProcessedDetail()
  }
}
</script>
