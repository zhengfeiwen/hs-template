<template>
  <div class="school-year-configure-container">
    <header>
      <hs-form ref="form" :model="form" label-width="98px" :inline="true">
        <hs-form-item label="业务">
          <dict-select @change="businessChange" constant-group-name="businessType" :val.sync="form.businessId"></dict-select>
        </hs-form-item>
        <hs-form-item label="学习类型">
          <dict-select ref="study" :option="options.study" :prop="{ key: 'id', value: 'studyName' }" :val.sync="form.studyId"></dict-select>
        </hs-form-item>
        <hs-form-item class="query-block">
          <hs-button type="primary" @click="onQuery" size="mini" icon="hs-icon-search">查询</hs-button>
          <hs-button type="default" @click="onReset" size="mini" icon="hs-icon-refresh-right">重置</hs-button>
        </hs-form-item>
      </hs-form>
    </header>
    <section>
      <simple-table :columnable="!1" :index="!0" :isCheckbox="!1" :data="tableData" :columns="columns" :loading="loading" :pagination.sync="pagination" @query="onQuery" :dicts="['yearType', 'businessId']">
        <template slot="action">
          <hs-button type="primary" @click="onAdd" size="mini" icon="hs-icon-plus">新增</hs-button>
        </template>
        <template slot="operator" slot-scope="{ scope }">
          <hs-button
            :disabled="scope.row.studyCode === '600006'"
            @click.native.prevent="onEdit(scope.row)"
            type="text"
            size="small">
            编辑
          </hs-button>
        </template>
      </simple-table>
    </section>
    <add-dialog :visible.sync="visible" :data="addData" @save-back="onQuery"></add-dialog>
  </div>
</template>

<script lang="ts">
import { Vue, Component } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import DetailDialog from '@/components/busi/table/detail.vue'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import AddDialog from './add/index.vue'
import util from '@/utils/busi/util'
import { baseApi } from '@/api/base'
@Component({
  name: 'school-year-configure',
  components: {
    SimpleTable,
    AddDialog,
    DetailDialog,
    DictSelect
  }
})
export default class SchoolYearConfigure extends Vue {
  private form: any = {
    studyId: '',
    businessId: ''
  }

  private loading = !1

  private tableData = {
    list: [{}],
    totalCount: 0
  }

  private options = {
    study: {
      url: '/fcs/study/getStudySelect',
      data: {
        businessId: -1
      }
    }
  }

  private businessChange () {
    this.options.study.data.businessId = this.form.businessId;
    (this.$refs.study as any).getList()
  }

  private columns = [{
    prop: 'businessId',
    label: '业务'
  },
  {
    prop: 'studyName',
    label: '学习类型'
  },
  {
    prop: 'yearType',
    label: '类型'
  },
  {
    prop: 'startDate',
    label: '学年开始月份'
  }]

  private pagination: any = {
    currentPage: 1,
    pageSize: 10
  }

  private async onQuery (pagination: any = null) {
    // do something
    this.loading = !0
    const form = util.trimForm(this.form)
    !pagination && (this.pagination.currentPage = 1)
    await baseApi('schoolYearConfigureList', {
      ...form,
      ...pagination || this.pagination
    }).then(async (res: any) => {
      this.loading = !1
      this.tableData.list = res.object.list.map((v: any) => {
        v.yearType = v.type
        return v
      })
      this.tableData.totalCount = res.object.totalCount
    }).catch((err: any) => {
      console.log('err', err)
      this.loading = !1
    })
  }

  private onReset () {
    this.form = {
      studyId: '',
      businessId: ''
    }
    this.onQuery()
  }

  private visible = !1

  private addData = {}

  private async onAdd () {
    this.visible = !0
    this.addData = {
      optype: 'add'
    }
  }

  private async onEdit (row: any) {
    await baseApi('schoolYearConfigureDetail', { id: row.id }).then((res: any) => {
      if (res.code === 10000) {
        this.visible = !0
        this.addData = {
          ...res.object.info
        }
      }
    })
  }

  mounted () {
    this.onQuery()
  }
}
</script>

<style lang="scss">
@import "./index";
</style>
