// 请求处理
import axios from 'axios'
import { UserModule } from '@/store/modules/user'
import { Message } from 'element-ui'

const service = axios.create({
  baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url
  timeout: 60 * 1000
  // withCredentials: true // send cookies when cross-domain requests
})

// Request interceptors
service.interceptors.request.use(
  (config: any) => {
    // 默认分页信息
    if(config.url.indexOf('/table/') > -1 && Object.keys(config.data.pagination).length === 0){
      config.data.pagination = {
        currentPage: 1,
        pageSize: 10
      }
    }
    // Add X-Access-Token header to every request, you can add other custom headers here
    if (UserModule.token) {
      // config.headers['Content-Session-Token'] = 'ceaa1afa4b8643ccaeba03b7f8b65212'
      config.headers['token'] = UserModule.token
    }
    return config
  },
  (error) => {
    Promise.reject(error)
  }
)

// Response interceptors
service.interceptors.response.use(
  (response) => {
    // Some example codes here:
    // code == 10000: success
    // code == 50001: invalid access token
    // code == 50002: already login in other place
    // code == 50003: access token expired
    // code == 50004: invalid user (user not exist)
    // code == 50005: username or password is incorrect
    // You can change this part for your own usage.
    const res = response.data
    if (res.code !== 10000) {
      Message({
        message: res.message || 'Error',
        type: 'error',
        duration: 60 * 1000
      })
      if (res.code === 50008 || res.code === 50012 || res.code === 50014 || res.code === -9999) {
        Message.error('你已被登出，请重新登录')
        UserModule.ResetToken()
        UserModule.LogOut()
        location.reload() // To prevent bugs from vue-router
        // MessageBox.confirm(
        //   '你已被登出，可以取消继续留在该页面，或者重新登录',
        //   '确定登出',
        //   {
        //     confirmButtonText: '重新登录',
        //     cancelButtonText: '取消',
        //     type: 'warning'
        //   }     
        // ).then(() => {
        //   UserModule.ResetToken()
        //   UserModule.LogOut()
        //   location.reload() // To prevent bugs from vue-router
        // })
      }
      return Promise.reject(new Error(res.message || 'Error'))
    } else {
      return response.data
    }
  },
  (error) => {
    if ((process.env.VUE_APP_BASE_API?.indexOf('mock') === -1)) {
      Message({
        message: '连接超时，请联系管理员',
        type: 'error',
        duration: 5 * 1000
      })
    }
    console.error(error)
    return Promise.reject(error)
  }
)

export default service
