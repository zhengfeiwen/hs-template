<template>
    <div class="collect-detail-container">
        <el-dialog title="退费流水详情" :visible.sync="visible" :before-close="onClose" width="70%" @open="open()">
            <div class="header">
                <div class="line">
                    <i class="hs-icon-user" /><span class="student-name">{{ info.stuName }}</span>
                </div>
                <div class="line">
                    <static-item label="性别">{{ info.sexName }}</static-item>
                    <static-item label="证件号">{{ info.idCard }}</static-item>
                </div>
            </div>
            <section>
              <div class="line">
                <static-item label="流水号">{{ info.billNo }}</static-item>
                <static-item label="创建时间">{{ timeConvert(info.createTime) }}</static-item>
                <static-item label="流水状态">{{ info.status }}</static-item>
                <static-item label="操作人">{{ info.createName }}</static-item>
              </div>
              <div class="line">
                <static-item label="缴费时间">{{ timeConvert(info.payTime) }}</static-item>
                <static-item label="缴费类型">退费</static-item>
                <static-item label="是否退学">{{ info.outSchool }}</static-item>
              </div>
              <hs-table
                id="editAbletrendsTable"
                :data="list"
                :border="!0"
                :show-summary="!0"
                :summary-method="getSummaries"
                style="width: 100%"
                header-row-class-name="header-style">
                  <hs-table-column align="center" prop="schoolName" label="缴费院校"></hs-table-column>
                  <hs-table-column align="center" prop="gradeName" label="缴费年级"></hs-table-column>
                  <hs-table-column align="center" prop="subjectName" label="缴费专业"></hs-table-column>
                  <hs-table-column align="center" prop="feeItemName" label="收费项目"></hs-table-column>
                  <hs-table-column align="center" prop="schoolYearName" label="学年"></hs-table-column>
                  <hs-table-column align="center" prop="feeMust" label="必缴"></hs-table-column>
                  <hs-table-column align="center" prop="receivableAmount" :formatter="formatterMoney" label="应收"></hs-table-column>
                  <hs-table-column align="center" prop="acceptedAmount" :formatter="formatterMoney" label="已收"></hs-table-column>
                  <hs-table-column align="center" prop="alreadyReductionAmount" :formatter="formatterMoney" label="已减免"></hs-table-column>
                  <hs-table-column align="center" prop="alreadyRefundAmount" :formatter="formatterMoney" label="已退"></hs-table-column>
                  <hs-table-column align="center" prop="payAmount" :formatter="formatterMoney" label="本次退费"></hs-table-column>
                  <hs-table-column align="center" prop="payAmount" :formatter="formatterMoney" label="余额退费"></hs-table-column>
                </hs-table>
                <div class="line auto">
                  <el-tooltip class="item" effect="dark" content="本次退款" placement="bottom"><i class="hs-icon-question" /></el-tooltip>
                  <static-item label="本次退款" :width="400">{{ info.receivableAmount }}</static-item>
                  <el-tooltip class="item" effect="dark" content="剩余余额" placement="bottom"><i class="hs-icon-question" /></el-tooltip>
                  <static-item label="剩余余额" :width="400">{{ info.payAmount }}</static-item>
                </div>
                <div class="line">
                  单据摘要：{{ info.remark }}
                </div>
              </section>
            <div slot="footer" class="dialog-footer">
                <el-button type="primary" >打印</el-button>
            </div>
        </el-dialog>
    </div>
</template>
<script lang='ts'>
import { Component, Prop, Vue } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import StaticItem from '@/components/busi/staticitem.vue'
import util from '@/utils/busi/util'
import { refundProcessedDetail } from '@/api/studentcenter'
import dayjs from 'dayjs'
import { getConstantDictVal } from '@/utils/common'
@Component({
  name: 'collect-detail',
  components: {
    SimpleTable,
    StaticItem
  }
})
export default class extends Vue {
  @Prop({ default: false }) private flowId!: number;

  @Prop({ default: false }) private visible!: boolean;

  private info = {
  }

  private list = [
  ]

  private async getPrepaidProcessedDetail () {
    await refundProcessedDetail({
      id: this.flowId
    }).then((res: any) => {
      this.list = res.object.info.items
      this.info = res.object.info
    }).catch((err: any) => {
      console.log('err', err)
    })
  }

  private getSummaries (param: any) {
    const { columns, data } = param
    const sums:any = {}
    columns.forEach((column: { property: string|number }, index: number) => {
      if (index === 0) {
        sums[index] = '总价'
        return
      }
      const values = data.map((item: { [x: string]: any }) => Number(item[column.property]))
      if (!values.every((value: number) => isNaN(value))) {
        sums[index] = values.reduce((prev: any, curr: any) => {
          const value = Number(curr)
          if (!isNaN(value)) {
            return prev + curr
          } else {
            return prev
          }
        }, 0)
        // sums[index] += ''
      } else {
        sums[index] = ''
      }
    })
    return sums
  }

  private timeConvert (timeStamp: number) {
    return dayjs(timeStamp).format('YYYY-MM-DD HH:mm:ss')
  }

  private formatterMoney (row: any, column: any, cellValue: any) {
    return util.generatingThousandthPer(cellValue)
  }

  private async getConstantDictVal (groupName:string, key:any) {
    return await getConstantDictVal(groupName, key)
  }

  private onClose () {
    this.list = []
    this.info = {}
    this.$emit('update:visible', false)
  }

  // public mounted (): void {
  // }

  public open (): void {
    this.getPrepaidProcessedDetail()
    console.log(this.flowId)
  }
}
</script>

<style lang='scss'>
.collect-detail-container{
    .header{
      width: 100%;
      display: flex;
      flex-direction: column;
      border-bottom: 1px solid #e4e4e4;
    }
    .line {
        width: 100%;
        display: flex;
        margin-bottom: 12px;
        .hs-icon-user {
            font-size: 22px;
            font-weight: bold;
            margin-right: 12px;
            margin-top: 2px;
        }
        .student-name {
            font-size: 20px;
            font-weight: bold;
        }
        &.auto .static-label{
          font-size: 16px;
          font-weight: bold;
        }
    }
    section{
      margin-top: 10px;
    }
    .static-item-container{
      width: 25%;
      .static-label{
        width: 150px;
      }
    }
}
</style>
