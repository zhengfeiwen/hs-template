<template>
  <div class="studentcenterupdateinput-container">
    <section>
      <hs-form ref="form" :rules="rules" :model="form" label-width="98px">
        <div class="left">
          <hs-form-item label="姓名" prop="userName">
            {{ form.userName }}
          </hs-form-item>
          <hs-form-item label="性别" prop="sexName">
            {{ form.sexName }}
          </hs-form-item>
          <hs-form-item label="民族" prop="ethnic">
            <dict-select :val.sync="form.ethnic" :prop="{value: 'nationName', key: 'nationKey' }" :option="{ url: '/fcs/nation/search', data: {} }"></dict-select>
          </hs-form-item>
          <hs-form-item label="业务" prop="businessName">
            {{ form.businessName }}
          </hs-form-item>
          <hs-form-item label="院校" prop="schoolName">
            {{ form.schoolName }}
          </hs-form-item>
          <hs-form-item label="年级" prop="gradeName">
            {{ form.gradeName }}
          </hs-form-item>
          <hs-form-item label="所属中心" prop="centerName">
            {{ form.centerName }}
          </hs-form-item>
          <hs-form-item label="学生来源" prop="stuentOragin">
            {{ form.stuentOragin }}
          </hs-form-item>
          <hs-form-item label="证件类型" prop="cardName">
            {{ form.cardName }}
          </hs-form-item>
          <hs-form-item label="联系电话" prop="phone">
            {{ form.phone }}
          </hs-form-item>
          <hs-form-item label="准考证号" prop="id">
            <hs-input size="mini" v-model="form.id" placeholder="请输入准考证号" ></hs-input>
          </hs-form-item>
        </div>
        <div class="right">
          <hs-form-item class="photo-block" label="照片" prop="photo">
            <hs-plupload
              browseButton="browseButton"
              :url="postUrl"
              :FilesAdded="filesAdded"
              :headers="{ token: token, accept: 'application/json' }"
              :multipart-params="{'parentFolder': 'lb/schoolDetail'}"
              @inputUploader="inputUploader"
              :UploadComplete="UploadComplete"
              :FileUploaded="FileUploaded"
              :Error="error"
            />
            <hs-image v-if="form.image" class="image-dashed" :src="setting.ossIp + '/' + form.image"></hs-image>
            <hs-link id="browseButton" v-else class="add-image image-dashed" icon="hs-icon-plus">添加照片</hs-link>
          </hs-form-item>
          <hs-form-item label="专业" prop="subjectName">
            {{ form.subjectName }}
          </hs-form-item>
          <hs-form-item label="学籍状态" prop="stuSchoolRollStatusName">
            {{ form.stuSchoolRollStatusName }}
          </hs-form-item>
          <hs-form-item label="教学点" prop="point">
            {{ form.point }}
          </hs-form-item>
          <hs-form-item label="来源名称" prop="oraginName">
            {{ form.oraginName }}
          </hs-form-item>
          <hs-form-item label="证件号码" prop="cardId">
            {{ form.cardId }}
          </hs-form-item>
          <hs-form-item label="家庭住址" prop="address">
            <hs-input size="mini" v-model="form.address" placeholder="请输入家庭住址" ></hs-input>
          </hs-form-item>
          <hs-form-item label="学号" prop="no">
            <hs-input size="mini" v-model="form.no" placeholder="请输入学号" ></hs-input>
          </hs-form-item>
        </div>
        <hs-form-item class="full-line" label="备注" prop="memo">
          <hs-input type="textarea" maxlength="200" show-word-limit :rows="3" v-model="form.memo" resize="none"></hs-input>
        </hs-form-item>
      </hs-form>
    </section>
    <footer>
      <hs-button type="primary" @click="onUpdate" v-permission="['studentCenterUpdate']" icon="hs-icon-plus" size="mini">修改</hs-button>
    </footer>
  </div>
</template>

<script lang="ts">
import { Vue, Component } from 'vue-property-decorator'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import { settingApi } from '@/api/settingmanage'
import setting from '@/settings'
@Component({
  name: 'student-center-update-input',
  components: {
    DictSelect
  }
})
export default class StudentCenterUpdateInput extends Vue {
  private setting = setting

  private picList: any[] = []

  private up: any = {}

  private files: any[] = []
  private form: any = {
    state: 1
  }

  get postUrl () {
    return `${process.env.VUE_APP_BASE_API}api/core/oss/file/fileUploadPost`
  }

  private inputUploader (up: any) {
    this.up = up
    this.files = up.files
  }

  private filesAdded (up: any) {
    if (up.files.length > 1) {
      up.removeFile(up.files[0])
    }
    this.upload()
  }

  private async upload () {
    this.up.start()
  }

  private UploadComplete (up: any, files: any) {
    console.log(up, files)
  }

  private FileUploaded (up: any, files: any, res: any) {
    const response = JSON.parse(res.response)
    this.files[0].name = response.fileInfos[0].originalFileName
    this.files[0].path = response.fileInfos[0].savePath
    this.form.image = response.fileInfos[0].savePath
  }

  private rules = {
    userName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    sexName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    ethnic: [
      { required: true, message: '请选择民族', trigger: 'change' }
    ],
    businessName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    schoolName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    gradeName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    centerName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    cardName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    subjectName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    cardId: [
      { required: true, message: '', trigger: 'blur' }
    ],
    stuSchoolRollStatusName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    // photo: [
    //   { validator: this.validatePhoto, required: true, message: '请上传照片', trigger: 'change' }
    // ],
    point: [
      { required: true, message: '', trigger: 'blur' }
    ]
  }

  private async onUpdate () {
    await settingApi('studentCenterUpdate', {
      ...this.form
    }).then((res: any) => {
      if (res.code === 10000) {
        this.$message.success('修改成功')
      }
    })
  }

  private error (up: any, res: any) {
    this.$message.error(res.message)
  }

  private initData () {
    // do
  }

  mounted () {
    this.initData()
  }
}
</script>

<style lang="scss">
@import "./index";
</style>
