<template>
  <div class="schoolfeestandard-container">
    <div class="left-block">
      <div class="tree-block">
        <tree url="/lb/business/school/leftBusinessSchoolTreeSearch" @node-click="handleNodeClick"></tree>
      </div>
    </div>
    <div class="right-block">
      <header>
        <p class="active-school">{{ curSchool }}</p>
        <hs-form ref="form" :model="form" label-width="98px" :inline="true">
           <hs-form-item label="年级">
            <dict-select :val.sync="form.grade" comm-group-name="state"></dict-select>
          </hs-form-item>
           <hs-form-item label="专业">
            <dict-select :val.sync="form.subject" comm-group-name="state"></dict-select>
          </hs-form-item>
           <hs-form-item label="标准代码">
            <dict-select :val.sync="form.feeStandardCode" comm-group-name="state"></dict-select>
          </hs-form-item>
           <hs-form-item label="学年">
            <dict-select :val.sync="form.len" comm-group-name="state"></dict-select>
          </hs-form-item>
           <hs-form-item label="是否有效">
            <dict-select :val.sync="form.validate" comm-group-name="radio"></dict-select>
          </hs-form-item>
           <hs-form-item label="是否必缴">
            <dict-select :val.sync="form.isMust" comm-group-name="radio"></dict-select>
          </hs-form-item>
           <hs-form-item label="允许退费">
            <dict-select :val.sync="form.isRefund" comm-group-name="radio"></dict-select>
          </hs-form-item>
           <hs-form-item label="收费项目">
            <dict-select :val.sync="form.item" comm-group-name="state"></dict-select>
          </hs-form-item>
           <hs-form-item label="收费区间">
            <hs-date-picker
              range-separator="至"
              value-format="timestamp"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
              :picker-options="pickerOptions"
              format="yyyy-MM-dd HH:mm:ss"
              :default-time="['00:00:00','23:59:59']"
              type="daterange"
              v-model="form.createTime"
              size="mini">
            </hs-date-picker>
          </hs-form-item>
          <hs-form-item class="query-block">
            <hs-button type="primary" @click="onQuery" size="mini" icon="hs-icon-search">查询</hs-button>
            <hs-button type="default" @click="onReset" size="mini" icon="hs-icon-refresh-right">重置</hs-button>
          </hs-form-item>
        </hs-form>
      </header>
      <section>
        <simple-table columnable :isCheckbox="!1" :export-name="exportName" :export-columns="exportColumns" :exportable="exportable" :data="tableData" :columns="columns" :loading="loading" @query="onQuery" :pagination.sync="pagination" :dicts="['must']">
          <template slot="operator" slot-scope="{ scope }">
            <hs-button
              @click.native.prevent="onRemove(scope.row)"
              v-permission="['']"
              type="text"
              size="small">
              移除<!-- -------移除收费标准，需判断是否绑定流水，有绑定要提示绑定多少条流水，并且支持查看流水信息 -->
            </hs-button>
            <hs-button
              @click.native.prevent="showDetail(scope.row)"
              type="text"
              size="small">
              查看
            </hs-button>
          </template>
          <template slot="action">
            <hs-button type="primary" @click="onAdd" icon="hs-icon-plus" size="mini">新增</hs-button>
          </template>
        </simple-table>
      </section>
    </div>
    <detail-dialog title="详情" :data="detailData" :visible.sync="visible"></detail-dialog>
    <add-dialog title="添加收费标准" :data="addData" :visible.sync="visibleAdd"></add-dialog>
  </div>
</template>

<script lang="ts">
import { Vue, Component } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import DetailDialog from '@/components/busi/table/detail.vue'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import AddDialog from './add/index.vue'
import Tree from '@/components/busi/custom/tree.vue'
import util from '@/utils/busi/util'
import dayjs from 'dayjs'
import { schoolfeestandardList, schoolfeestandardCount, schoolfeestandardDetail, schoolfeestandardDelete } from '@/api/base'
import { checkPermission } from '@/utils/permission'
@Component({
  name: 'schoolfeestandard',
  components: {
    SimpleTable,
    DetailDialog,
    DictSelect,
    AddDialog,
    Tree
  }
})
export default class SchoolFeeStandard extends Vue {
  private form : any= {}

  private loading = !1

  private curBusinessId = 1000

  private visibleAdd = !1

  private addData = {}

  private detailData = {}

  private handleNodeClick (data: any) {
    this.curBusinessId = data.curBusinessId
  }

  private tableData = {
    list: [{}],
    totalCount: 0
  }

  private columns = [{
    prop: 'grade',
    label: '年级'
  },
  {
    prop: 'subject',
    label: '专业'
  },
  {
    prop: 'len',
    label: '学年'
  },
  {
    prop: 'feeStandardCode',
    label: '收费标准代码'
  },
  {
    prop: 'feeStandardItem',
    label: '收费项目'
  },
  {
    prop: 'feeStandardItemCode',
    label: '收费项目代码'
  },
  {
    prop: 'money',
    label: '金额',
    format: 'money'
  },
  {
    prop: 'isMust',
    label: '是否必缴'
  },
  {
    prop: 'isRefund',
    label: '允许退费'
  }]

  private exportColumns = [{
    prop: 'grade',
    label: '年级'
  },
  {
    prop: 'subject',
    label: '专业'
  },
  {
    prop: 'degreeName',
    label: '学历层次'
  },
  {
    prop: 'lenName',
    label: '学制'
  },
  {
    prop: 'len',
    label: '学年'
  },
  {
    prop: 'feeStandardCode',
    label: '收费标准代码'
  },
  {
    prop: 'feeStandardItem',
    label: '收费项目'
  },
  {
    prop: 'feeStandardItemCode',
    label: '收费项目代码'
  },
  {
    prop: 'money',
    label: '金额',
    format: 'money'
  },
  {
    prop: 'isMust',
    label: '是否必缴'
  },
  {
    prop: 'isRefund',
    label: '允许退费'
  }]

  private exportParam () {
    const temp = { ...this.form }
    return util.trimForm({ ...temp }, this.columns)
  }

  private exportable = {
    exportable: checkPermission(['orderExport']),
    src: '/fcs/schoolFeeStandard/export',
    data: this.exportParam
  }

  get exportName () {
    const day = dayjs(new Date()).format('YYYYMMDD')
    return `${this.curBusinessId}-收费标准-${day}`
  }

  get pickerOptions () {
    return util.pickerOptions
  }

  private pagination: any = {
    currentPage: 1,
    pageSize: 10
  }

  private async onQuery (pagination: any = null) {
    this.loading = !0
    const form = util.trimForm({ ...this.form })
    !pagination && (this.pagination.currentPage = 1)
    await schoolfeestandardList({
      ...form,
      ...pagination || this.pagination
    }).then(async (res: any) => {
      await schoolfeestandardCount({
        ...form,
        ...pagination || this.pagination
      }).then((resCnt: any) => {
        this.loading = !1
        this.tableData.list = res.object.list
        this.tableData.totalCount = resCnt.object.totalCount
      }).catch((err: any) => {
        console.log('err', err)
        this.loading = !1
      })
    }).catch((err: any) => {
      console.log('err', err)
      this.loading = !1
    })
  }

  private onReset () {
    this.form = {}
    this.onQuery()
  }

  private currentPage = 1

  private visible = !1

  private async showDetail (row: any) {
    await schoolfeestandardDetail({ id: row.id }).then((res: any) => {
      if (res.code === 10000) {
        this.visible = !0
        this.detailData = {
          businessName: res.object.businessName,
          businessState: res.object.businessStateName,
          memo: res.object.memo
        }
      }
    })
  }

  private async onRemove (row: any) {
    await schoolfeestandardDelete({
      id: row.id
    }).then((res: any) => {
      if (res.code === 10000) {
        this.$message.success(res.message)
      } else {
        this.$message.error(res.message)
      }
    })
  }

  private onAdd () {
    // do something
    this.visibleAdd = !0
    this.addData = {
      businessId: this.curBusinessId
    }
  }

  mounted () {
    this.onQuery()
    util.initFlexForm()
  }
}
</script>

<style lang="scss" scoped>
@import "./index";
</style>
