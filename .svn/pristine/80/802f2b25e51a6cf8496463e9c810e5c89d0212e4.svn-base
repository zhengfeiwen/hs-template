<template>
  <div class="reportdirectionsmanager-container">
    <header>
      <div class="action-bolck">
        <hs-button type="primary" @click="onAdd" v-permission="['reportDirectionsInsertInput']" icon="hs-icon-plus" size="mini">新增</hs-button>
      </div>
    </header>
    <section>
      <simple-table :isCheckbox="!1" :data="tableData" :columns="columns" :loading="loading" @query="onQuery" :pagination.sync="pagination" @row-dbclick="showDetail" :dicts="['gradeState']">
        <template slot="operator" slot-scope="{ scope }">
          <hs-button
            v-permission="['reportDirectionsUpdateInput']"
            @click.native.prevent="onEdit(scope.row)"
            type="text"
            size="small">
            编辑
          </hs-button>
          <hs-button
            v-permission="['reportDirectionsDelete']"
            @click.native.prevent="onRemove(scope.row)"
            type="text"
            size="small">
            删除
          </hs-button>
        </template>
      </simple-table>
    </section>
    <detail-dialog title="详情" :data="detailData" :visible.sync="visible" ></detail-dialog>
    <add-dialog :visible.sync="visibleAdd" ></add-dialog>
  </div>
</template>

<script lang="ts">
import { Vue, Component } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import DetailDialog from '@/components/busi/table/detail.vue'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import AddDialog from './add/index.vue'
import { reportDirectionsInsertInput, reportDirectionsDelete, reportDirectionsUpdateInput, reportDirectionsDetail, reportOptionList, reportOptionCount } from '@/api/notice'
@Component({
  name: 'report-directions-manager',
  components: {
    SimpleTable,
    DetailDialog,
    AddDialog,
    DictSelect
  }
})
export default class ReportDirectionsManager extends Vue {
  private form = {
    gradeState: 1
  }

  private loading = !1

  private tableData = {
    list: [],
    totalCount: 0
  }

  private columns = [{
    prop: 'reportName',
    label: '报表名称'
  },
  {
    prop: 'date',
    label: '更新时间'
  }]

  private pagination: any = {
    currentPage: 1,
    pageSize: 10
  }

  private async onQuery (pagination: any = null) {
    // do something
    this.loading = !0
    !pagination && (this.pagination.currentPage = 1)
    await reportOptionList({
      ...pagination || this.pagination
    }).then(async (resCnt: any) => {
      await reportOptionCount({}).then((res: any) => {
        this.loading = !1
        this.tableData.list = res.object.list
        this.tableData.totalCount = resCnt.object.totalCount
      }).catch((err: any) => {
        console.log('err', err)
        this.loading = !1
      })
    }).catch((err: any) => {
      console.log('err', err)
      this.loading = !1
    })
  }

  private onReset () {
    this.form = {
      gradeState: 1
    }
    this.onQuery()
  }

  private visible = !1

  private visibleAdd = !1

  private detailData = {}

  private async showDetail (row: any) {
    await reportDirectionsDetail({ id: row.id }).then((res: any) => {
      if (res.code === 10000) {
        this.visible = !0
        this.detailData = {
          gradeCode: res.object.gradeCode,
          gradeName: res.object.gradeName,
          gradeState: res.object.gradeState
        }
      }
    })
  }

  private onAdd () {
    this.visibleAdd = !0
  }

  private onEdit (row: any) {
    // do
  }

  private onRemove (row: any) {
    // do
  }

  mounted () {
    this.onQuery()
  }
}
</script>

<style lang="scss" scoped>
@import "./index";
</style>
