import request from '@/utils/request'
import setting from '@/settings'
const apiUrl = setting.apiUrl

const studentConfig: any = {
  stuList: { url: '/fcs/stu/sch/roll/list' }, // 学生列表
  stuListCount: { url: '/fcs/stu/sch/roll/list/count' }, // 学生列表
  stuDetail: { url: '/fcs/stu/sch/roll/detail' }, // 学生详情
  stuInsert: { url: '/fcs/stu/sch/roll/insert' }, // 学生新增
  stuUpdate: { url: '/fcs/stu/sch/roll/update' }, // 学生修改
  stuInsertCheck: { url: '/fcs/stu/sch/roll/insert/check/unique' }, // 唯一性验证
  stuEnable: { url: '/fcs/stu/sch/roll/enable' }, // 学生启用
  stuDisable: { url: '/fcs/stu/sch/roll/disable' }, // 学生禁用
  stuSourceTree: { url: '/fcs/studentSource/tree' }, // 学生来源下拉数据
  alterationRecordList: { url: '/fcs/stu/log/list' }, // 变更记录
  alterationRecordListCount: { url: '/fcs/stu/log/list/count' }, // 变更记录总条数
  feesList: { url: '/fcs/stu/fees/list' }, // 缴费流水列表
  feesItemList: { url: '/fcs/stu/fees/item/list' }, // 缴费流水明细列表
  feesListCount: { url: '/fcs/stu/fees/list/count' }, // 缴费流水列表总数
  payRecordDetail: { url: '/fcs/ft/pay/payRecordInfo' }, // 全日制收费流水详情
  prepaidProcessedDetail: { url: '/fcs/ft/pre/processed/detail' }, // 预收-已处理-详情
  reduceProcessedDetail: { url: '/fcs/fulltime/reduce/already/process/detail' }, // 减免详情
  refundProcessedDetail: { url: '/fcs/fulltime/refund/already/process/detail' }, // 退费详情
  insertExistence: { url: '/fcs/stu/sch/roll/data/call/back/list' }, // 新增回调生源列表
  insertCheckVerifyStudentModify: { url: '/fcs/stu/sch/roll/insert/check/verify/student/modify' }, // 校验学生回调数据是否能修改-学生来源
  stuAccountDetail: { url: '/fcs/stu/common/account/detail' }, //学生账户详情
  resetPwd: { url: '/fcs/stu/sch/roll/reset/pwd' } // 重置密码
}

export const api: any = {}

Object.keys(studentConfig).map(key => {
  api[key] = (params: any = {}) =>
    request({
      url: `${apiUrl.api}${studentConfig[key].url}`,
      method: 'post',
      data: params,
      headers: studentConfig[key].headers
    }).then(async (res:any) => {
      // 分页链式
      const countKey = `${key}Count`
      if (api[countKey]) {
        const resCnt = await api[countKey](params)
        res.object.totalCount = resCnt.object.totalCount
      }
      return res
    })
})

export const studentApi = (key: any, params: any = {}) => {
  if (api[key]) {
    return api[key](params)
  } else {
    throw Error('不存在该方法：' + key)
  }
}
