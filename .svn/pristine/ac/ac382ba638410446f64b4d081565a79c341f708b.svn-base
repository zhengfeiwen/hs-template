// 金额字段翻译字典
import { isType, typeName } from '../common'
const dicts: any[] = [
  'amount', // 金额
  'payAmount', // 收款金额
  'receivableAmount', // 应收金额
  'acceptedAmount', // 已收金额
  'reductionAmount', // 减免金额
  'alreadyReductionAmount', // 已减免金额
  'refundAmount', // 退款金额
  'alreadyRefundAmount', // 已退金额
  'arrearsAmount', // 欠款金额
  'cash', // 现金
  'brushCard', // 刷卡金额
  'transferMoney', // 转账金额
  'sweepCodeMoney', // 扫码金额
  'aliPay', // 支付宝
  'wechatPay', // 微信
  'wechatOnlinePay', // 微信在线支付
  'oneCodePay', // 一码通
  'payPlatform', // 缴平台
  'xtPay', // 秀推
  'accountPay', // 账户支付
  'accountAmount', // 本次个人账户入账金额
  'balance', // 余额
  'receivableMoney', // 应收
  'feesMoney', // 已收
  'reduceMoney', // 已减免
  'refundMoney' // 已退
]

export const DICT_MONEY_KEY = dicts

// 是否是标准金额字段
const isMoney = (key: any) => dicts.includes(key)

// 换算金额
const alternateUnits = (obj: any, option: any) => {
  let units = (option && option.units) ? option.units : 100
  units = Math.floor(Math.log10(units))
  if (isType(obj, 'number')) {
    return ((obj * Math.pow(10, units)).toFixed(2) as any) * 1
  } else if (isType(obj, 'string')) {
    return (obj * 1 * Math.pow(10, units)).toFixed(2).toString()
  } else {
    return obj
  }
}

// 金额调整
export const moneyStandardization = (key: any, val: any, option: any) => {
  if (isMoney(key)) return alternateUnits(val, option)
  return val
}
