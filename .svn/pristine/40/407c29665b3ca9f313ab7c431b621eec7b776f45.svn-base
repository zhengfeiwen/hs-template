<template>
  <div class="schoolFeeStandard-container">
    <div class="left-block">
      <div class="tree-block">
        <tree url="/fcs/school/tree" :props="{ children: 'children', label: 'name' }" @node-click="handleNodeClick"></tree>
      </div>
    </div>
    <div class="right-block">
      <header>
        <p class="active-school">{{ curSchool.name }}</p>
        <hs-form ref="form" :model="form" label-width="98px" :inline="true">
          <hs-form-item label="年级">
            <dict-select ref="grade" :option="options.grade" :prop="{ key: 'id', value: 'gradeName' }" :val.sync="form.gradeId"></dict-select>
          </hs-form-item>
          <hs-form-item label="专业">
            <dict-select ref="subject" :option="options.subject" :prop="{ key: 'id', value: 'subjectName' }" :val.sync="form.subjectId"></dict-select>
          </hs-form-item>
          <hs-form-item label="标准代码">
            <dict-select :val.sync="form.feeStandardCode" :option="options.standard" :prop="{ key: 'feeItemCode', value: 'feeItemName' }"></dict-select>
          </hs-form-item>
          <hs-form-item label="学年">
            <dict-select :val.sync="form.len" constant-group-name="len"></dict-select>
          </hs-form-item>
          <hs-form-item label="是否必缴">
            <dict-select :val.sync="form.isMust" comm-group-name="radio"></dict-select>
          </hs-form-item>
          <hs-form-item label="允许退费">
            <dict-select :val.sync="form.isRefund" comm-group-name="radio"></dict-select>
          </hs-form-item>
          <hs-form-item label="收费项目">
            <dict-select :val.sync="form.feeItemId" :option="{ url: '/fcs/item/select', data: {} }" :prop="{ key: 'id', value: 'feeItemName' }"></dict-select>
          </hs-form-item>
          <hs-form-item class="query-block">
            <hs-button type="primary" @click="onQuery" size="mini" icon="hs-icon-search">查询</hs-button>
            <hs-button type="default" @click="onReset" size="mini" icon="hs-icon-refresh-right">重置</hs-button>
          </hs-form-item>
        </hs-form>
      </header>
      <section>
        <simple-table columnable :isCheckbox="!1" :export-name="exportName" :export-columns="exportColumns" :exportable="exportable" :data="tableData" :columns="columns" :loading="loading" @query="onQuery" :pagination.sync="pagination" :dicts="['ifMust']">
          <template slot="operator" slot-scope="{ scope }">
            <hs-button
              @click.native.prevent="onRemove(scope.row)"
              v-permission="['']"
              type="text"
              size="small">
              移除<!-- -------移除收费标准，需判断是否绑定流水，有绑定要提示绑定多少条流水，并且支持查看流水信息 -->
            </hs-button>
            <hs-button
              @click.native.prevent="showDetail(scope.row)"
              type="text"
              size="small">
              查看
            </hs-button>
          </template>
          <template slot="action">
            <hs-button type="primary" @click="onAdd" icon="hs-icon-plus" size="mini">新增</hs-button>
          </template>
        </simple-table>
      </section>
    </div>
    <detail-dialog title="详情" :data="detailData" :visible.sync="visible" :dicts="['ifMust', 'ifRefund']"></detail-dialog>
    <add-dialog title="添加收费标准" :data="addData" :visible.sync="visibleAdd"></add-dialog>
  </div>
</template>

<script lang="ts">
import { Vue, Component } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import DetailDialog from '@/components/busi/table/detail.vue'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import AddDialog from './add/index.vue'
import Tree from '@/components/busi/custom/tree.vue'
import util from '@/utils/busi/util'
import dayjs from 'dayjs'
import { schoolFeeStandardList, schoolFeeStandardCount, schoolFeeStandardDetail, schoolFeeStandardDelete } from '@/api/base'
import { checkPermission } from '@/utils/permission'
@Component({
  name: 'schoolFeeStandard',
  components: {
    SimpleTable,
    DetailDialog,
    DictSelect,
    AddDialog,
    Tree
  }
})
export default class SchoolFeeStandard extends Vue {
  private form : any= {
    gradeId: '',
    subjectId: ''
  }

  private loading = !1

  private curSchool: any = {}

  private visibleAdd = !1

  private addData = {}

  private detailData = {}

  private handleNodeClick (data: any) {
    this.curSchool = data
    this.options.grade.data.schoolId = data.schoolId
    this.options.subject.data.schoolId = data.schoolId
    this.form.gradeId = ''
    this.form.subjectId = '';
    (this.$refs.grade as any).getList();
    (this.$refs.subject as any).getList()
  }

  private options = {
    grade: {
      url: '/fcs/grade/getGradeSelect',
      data: {
        schoolId: -1
      }
    },
    subject: {
      url: '/fcs/subject/getSubjectSelect',
      data: {
        schoolId: -1
      }
    },
    standard: {
      url: '/fcs/standard/list',
      data: {
        pageSize: 9999,
        currentPage: 1
      }
    }
  }

  private tableData = {
    list: [{}],
    totalCount: 0
  }

  private columns = [{
    prop: 'gradeName',
    label: '年级'
  },
  {
    prop: 'subjectName',
    label: '专业'
  },
  {
    prop: 'schoolYear',
    label: '学年'
  },
  {
    prop: 'feeStandardCode',
    label: '收费标准代码'
  },
  {
    prop: 'feeItemName',
    label: '收费项目'
  },
  {
    prop: 'feeItemCode',
    label: '收费项目代码'
  },
  {
    prop: 'amount',
    label: '金额',
    format: 'money'
  },
  {
    prop: 'ifMust',
    label: '是否必缴'
  }]

  private exportColumns = [{
    prop: 'gradeName',
    label: '年级'
  },
  {
    prop: 'subjectName',
    label: '专业'
  },
  {
    prop: 'degreeName',
    label: '学历层次'
  },
  {
    prop: 'lenName',
    label: '学制'
  },
  {
    prop: 'schoolYear',
    label: '学年'
  },
  {
    prop: 'feeItemName',
    label: '收费项目'
  },
  {
    prop: 'feeItemCode',
    label: '收费项目代码'
  },
  {
    prop: 'amount',
    label: '金额',
    format: 'money'
  },
  {
    prop: 'ifMust',
    label: '是否必缴'
  },
  {
    prop: 'isRefund',
    label: '允许退费'
  }]

  private exportParam () {
    const temp = { ...this.form }
    return util.trimForm({ ...temp }, this.columns)
  }

  private exportable = {
    exportable: checkPermission(['orderExport']),
    src: '/fcs/schoolFeeStandard/export',
    data: this.exportParam
  }

  get exportName () {
    const day = dayjs(new Date()).format('YYYYMMDD')
    return `${this.curSchool.name}-收费标准-${day}`
  }

  get pickerOptions () {
    return util.pickerOptions
  }

  private pagination: any = {
    currentPage: 1,
    pageSize: 10
  }

  private async onQuery (pagination: any = null) {
    this.loading = !0
    const form = util.trimForm({ ...this.form })
    !pagination && (this.pagination.currentPage = 1)
    await schoolFeeStandardList({
      schoolId: this.curSchool.schoolId,
      ...form,
      ...pagination || this.pagination
    }).then(async (res: any) => {
      await schoolFeeStandardCount({
        schoolId: this.curSchool.schoolId,
        ...form
      }).then((resCnt: any) => {
        this.loading = !1
        this.tableData.list = res.object.list
        this.tableData.totalCount = resCnt.object.totalCount
      }).catch((err: any) => {
        console.log('err', err)
        this.loading = !1
      })
    }).catch((err: any) => {
      console.log('err', err)
      this.loading = !1
    })
  }

  private onReset () {
    this.form = {
      gradeId: '',
      subjectId: ''
    }
    this.onQuery()
  }

  private currentPage = 1

  private visible = !1

  private async showDetail (row: any) {
    await schoolFeeStandardDetail({ id: row.id }).then((res: any) => {
      if (res.code === 10000) {
        this.visible = !0
        this.detailData = {
          schoolName: res.object.info.schoolName,
          gradeName: res.object.info.gradeName,
          schoolYear: res.object.info.schoolYear,
          subjectName: res.object.info.subjectName,
          feeStandarCode: res.object.info.feeStandarCode,
          feeItemCode: res.object.info.feeItemCode,
          feeItemName: res.object.info.feeItemName,
          amount: res.object.info.amount,
          ifMust: res.object.info.ifMust,
          ifRefund: res.object.info.ifRefund,
          createTime: res.object.info.createTime,
          remark: res.object.info.remark
        }
      }
    })
  }

  private async onRemove (row: any) {
    await schoolFeeStandardDelete({
      id: row.id
    }).then((res: any) => {
      if (res.code === 10000) {
        this.$message.success(res.message)
      } else {
        this.$message.error(res.message)
      }
    })
  }

  private onAdd () {
    // do something
    this.visibleAdd = !0
    this.addData = {
      schoolId: this.curSchool.schoolId
    }
  }

  mounted () {
    this.onQuery()
    // util.initFlexForm()
  }
}
</script>

<style lang="scss" scoped>
@import "./index";
</style>
