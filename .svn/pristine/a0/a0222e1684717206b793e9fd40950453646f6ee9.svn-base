<template>
  <div class="change-stubaseinfo-dialog-container">
    <el-dialog title="学生基础信息修改" :visible.sync="visible" :before-close="onClose" @open="open()">
      <hs-form ref="stuInfo" :rules="rules" :model="stuInfo" label-width="98px" class="border-style2">
      <table class="simple-table" border="1">
        <tr>
          <td>
            <hs-form-item label="姓名" prop="stuName">
              <hs-input size="mini" v-model="stuInfo.stuName" placeholder="请输入姓名" ></hs-input>
            </hs-form-item>
          </td>
          <td rowspan="4">
            <hs-form-item class="photo-block" label="照片" prop="photo">
            <hs-plupload
              browseButton="browseButton"
              url="/api/core/oss/file/fileUploadPost"
              :FilesAdded="filesAdded"
              :headers="{ token: token, accept: 'application/json' }"
              :multipart-params="{'parentFolder': 'lb/schoolDetail'}"
              @inputUploader="inputUploader"
              :UploadComplete="UploadComplete"
              :FileUploaded="FileUploaded"
              :Error="error"
            />
            <hs-image v-if="stuInfo.attachment" class="image-dashed" :src="setting.ossIp + '/' + stuInfo.attachment.filePath"></hs-image>
            <hs-link id="browseButton" v-else class="add-image image-dashed" icon="hs-icon-plus">添加照片</hs-link>
          </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="性别" prop="sexName">
              <dict-select :val.sync="stuInfo.stuSex" constant-group-name="sex"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="民族" prop="ethnic">
              <dict-select :val.sync="stuInfo.stuEthnic" @change="(val, label)=>{ this.stuInfo.stuEthnic = val; this.stuInfo.stuEthnicName = label}" :prop="{ key: 'nationKey', value: 'nationName' }" :option="options.ethnic"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="业务" prop="businessName">
              <dict-select :val.sync="stuInfo.stuBusinessId" constant-group-name="businessType" @change="businessChange"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="院校" prop="schoolName">
              <dict-select ref="school" @change="schoolChange()" :data="schoolItemData" :prop="{ key: 'dataKey', value: 'showValue' }" :val.sync="stuInfo.stuSchoolDataKey"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="专业" prop="subjectName">
              <dict-select ref="subject" @change="$forceUpdate()" :data="subjectItemData" :prop="{ key: 'dataKey', value: 'showValue' }" :val.sync="stuInfo.stuSubjectDataKey"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="年级" prop="gradeName">
              <dict-select ref="grade" @change="$forceUpdate()" :data="gradeItemData" :prop="{ key: 'dataKey', value: 'gradeName' }" :val.sync="stuInfo.stuGradeDataKey"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="学籍状态" prop="stuSchoolRollStatusName">
              <dict-select :val.sync="stuInfo.stuSchoolRollStatus" constant-group-name="stuSchoolRollStatus"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <hs-form-item label="第二学历" prop="stuTwoEducation">
          <dict-select :val.sync="stuInfo.stuTwoEducation" constant-group-name="yesOrNo"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr v-if="stuInfo.stuTwoEducation === 1">
          <td>
            <hs-form-item label="第二院校" prop="schoolName">
              <dict-select ref="school" @change="(val, label)=>{ this.stuInfo.stuSchoolId = val; this.stuInfo.stuSchoolName = label; this.schoolChange()}" :option="options.school" :prop="{ key: 'id', value: 'schoolName' }" :val.sync="stuInfo.stuSchoolId"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="第二专业" prop="subjectName">
              <dict-select ref="subject" @change="(val, label)=>{ this.stuInfo.stuSubjectId = val.split('-')[0]; this.submitForm.stuSubjectId = val.split('-')[0]; this.submitForm.stuSubjectCode = val.split('-')[1]; this.submitForm.stuSubjectName = val.split('-')[2]; this.$forceUpdate(); }" :data="subjectItemData" :prop="{ key: 'dataKey', value: 'showValue' }" :val.sync="stuInfo.stuSubjectDataKey"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr v-if="stuInfo.stuTwoEducation === 1">
          <td>
            <hs-form-item label="第二年级" prop="gradeName">
              <dict-select ref="grade" @change="gradeChange" :option="options.grade" :prop="{ key: 'id', value: 'gradeName' }" :val.sync="stuInfo.stuGradeId"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="第二学籍状态" prop="stuSchoolRollStatusName">
              <dict-select :val.sync="stuInfo.stuSchoolRollStatus" constant-group-name="stuSchoolRollStatus"></dict-select>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="所属中心" prop="stuBelongCenter">
              <dict-select ref="center" @change="(val, label)=>{ this.stuInfo.stuBelongCenter = val; this.stuInfo.stuBelongCenterName = label}" :option="options.center" :prop="{ key: 'id', value: 'centerName' }" :val.sync="stuInfo.stuBelongCenter"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="教学点" prop="stuTeachingPoint">
              <hs-input size="mini" v-model="stuInfo.stuTeachingPoint" placeholder="请输入教学点" ></hs-input>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="学生来源" prop="stuSource">
              <dict-select ref="stuSource" :option="options.stuSource" :prop="{ key: 'optionKey', value: 'optionValue' }" :val.sync="stuInfo.stuSource"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="来源名称" prop="stuSourceName">
              <hs-input size="mini" v-model="stuInfo.stuSourceName" placeholder="请输入来源名称" ></hs-input>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="证件类型" prop="cardName">
              <dict-select :val.sync="stuInfo.stuPaperworkType" constant-group-name="stuPaperworkType"></dict-select>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="证件号码" prop="stuPaperworkNumber">
              <hs-input size="mini" v-model="stuInfo.stuPaperworkNumber" placeholder="请输入证件号码" ></hs-input>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="联系电话" prop="phone">
              <hs-input size="mini" v-model="stuInfo.stuPhone" placeholder="请输入联系电话" ></hs-input>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="备用手机号" prop="relativesMobile">
              <hs-input size="mini" v-model="stuInfo.relativesMobile" placeholder="请输入备用手机号" ></hs-input>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td>
            <hs-form-item label="准考证号" prop="stuExamNumber">
              <hs-input size="mini" v-model="stuInfo.stuExamNumber" placeholder="请输入准考证号" ></hs-input>
            </hs-form-item>
          </td>
          <td>
            <hs-form-item label="学号" prop="stuNumber">
              <hs-input size="mini" v-model="stuInfo.stuNumber" placeholder="请输入学号" ></hs-input>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <hs-form-item label="家庭住址" prop="stuAddress">
              <hs-input size="mini" v-model="stuInfo.stuAddress" placeholder="请输入家庭住址" ></hs-input>
            </hs-form-item>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <hs-form-item label="备注" prop="stuRemark">
              <hs-input type="textarea" maxlength="200" show-word-limit :rows="3" v-model="stuInfo.stuRemark" resize="none"></hs-input>
            </hs-form-item>
          </td>
        </tr>
      </table>
    </hs-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="onClose">取 消</el-button>
        <el-button type="primary" @click="submit">确 定</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script lang='ts'>
import { Component, Prop, Vue } from 'vue-property-decorator'
import DictSelect from '@/components/busi/custom/dictselect.vue'
import setting from '@/settings'
import { stuDetail, stuUpdate } from '@/api/studentcenter'
import { getConstant, getList } from '@/api/common'
import { SessionStorage } from '@/utils/storage'
import { getConstantDict, getConstantDictVal, isEmpty } from '@/utils/common'
@Component({
  name: 'student-baseinfo',
  components: {
    DictSelect
  }
})
export default class extends Vue {
  @Prop({ default: false }) private stuId!: number;

  @Prop({ default: false }) private visible!: boolean;

  private setting = setting

  private up: any = {}

  private files: any[] = []

  private stuInfo: any = {}

  private submitForm = {
    id: '',
    stuPaperworkType: '',
    stuPaperworkNumber: '',
    stuPhone: '',
    relativesMobile: '',
    stuName: '',
    stuSex: '',
    stuEthnic: '',
    stuEthnicName: '',
    stuBusinessId: '',
    stuStudyId: '',
    stuSchoolName: '',
    stuSchoolId: '',
    stuSchoolCode: '',
    studyName: '',
    stuGradeId: '',
    stuGradeCode: '',
    stuGradeName: '',
    stuSubjectId: '',
    stuSubjectCode: '',
    stuSubjectName: '',
    stuSchoolRollStatus: '',
    stuTwoEducation: '',
    stuTwoEducationSchoolId: '',
    stuTwoEducationSchoolCode: '',
    stuTwoEducationSchoolName: '',
    stuTwoEducationGradeId: '',
    stuTwoEducationGradeCode: '',
    stuTwoEducationGradeName: '',
    stuTwoEducationSubjectId: '',
    stuTwoEducationSubjectCode: '',
    stuTwoEducationSubjectName: '',
    stuTwoEducationSchoolRollStatus: '',
    stuBelongCenter: '',
    stuBelongCenterName: '',
    stuTeachingPoint: '',
    stuSource: '',
    stuSourceName: '',
    stuExamNumber: '',
    stuNumber: '',
    stuAddress: '',
    stuRemark: '',
    attachment: {
      originalName: '',
      fileNewName: '',
      filePath: '',
      fileSize: '',
      fileSuffix: ''
    }
  }

  private async getConstant (constantGroupName: any) {
    const key = `constant-${constantGroupName}`
    let list = SessionStorage.get(key, 'array')
    if (isEmpty(list)) {
      await getConstant({
        groupName: constantGroupName
      }).then((res: any) => {
        if (res.object) {
          list = res.object.list
          SessionStorage.set(key, JSON.stringify(list))
        }
      })
    }
  }

  private getConstantByKeyNum (constantGroupName: any, keyNum: any) {
    this.getConstant(constantGroupName)
    let constantValue: any
    const key = `constant-${constantGroupName}`
    const list = SessionStorage.get(key, 'array')
    list.forEach((item: { key: any, value: any }) => {
      if (keyNum === item.key) {
        constantValue = item.value
      }
    })
    return constantValue
  }

  private schoolItemData: any = []

  private subjectItemData: any = []

  private gradeItemData: any = []

  private async getSchoolItem () {
    await getList({
      url: this.options.school.url,
      data: {
        businessId: this.stuInfo.stuBusinessId
      }
    }).then((res: any) => {
      if (res.code === 10000) {
        this.schoolItemData = []
        res.object.list.map((v: any) => {
          v.dataKey = `${v.id}-${v.schoolCode}-${v.schoolName}-${v.study}-${v.studyName}`
          v.showValue = `[${this.getConstantByKeyNum('businessType', Number(this.stuInfo.stuBusinessId))}]${v.schoolName}[${v.studyName}]`
          this.schoolItemData.push(v)
          if (v.id === this.stuInfo.stuSchoolId) {
            this.stuInfo.stuSchoolDataKey = v.dataKey
            this.getSubjectItem()
            this.getGradeItem()
          }
        })
      }
    })
  }

  private async getSubjectItem () {
    await getList({
      url: this.options.subject.url,
      data: {
        schoolId: this.stuInfo.stuSchoolDataKey.split('-')[0]
      }
    }).then((res: any) => {
      if (res.code === 10000) {
        this.subjectItemData = []
        res.object.list.map((v: any) => {
          v.dataKey = `${v.id}-${v.subjectCode}-${v.subjectName}`
          v.showValue = `[${this.getConstantByKeyNum('subjectDegree', Number(v.degree))}]${v.subjectName}[${this.getConstantByKeyNum('subjectLen', Number(v.len))}年]`
          this.subjectItemData.push(v)
          // 只有第一次加载的时候会触发以下内容
          if (v.id === this.stuInfo.stuSubjectId) {
            this.stuInfo.stuSubjectDataKey = v.dataKey
          }
        })
      }
    })
  }

  private async getGradeItem () {
    await getList({
      url: this.options.grade.url,
      data: {
        schoolId: this.stuInfo.stuSchoolDataKey.split('-')[0]
      }
    }).then((res: any) => {
      if (res.code === 10000) {
        this.gradeItemData = []
        res.object.list.map((v: any) => {
          v.dataKey = `${v.id}-${v.gradeCode}-${v.gradeName}`
          this.gradeItemData.push(v)
          // 只有第一次加载的时候会触发以下内容
          if (v.id === this.stuInfo.stuGradeId) {
            this.stuInfo.stuGradeDataKey = v.dataKey
          }
        })
      }
    })
  }

  private inputUploader (up: any) {
    this.up = up
    this.files = up.files
  }

  private rules = {
    stuName: [
      { required: true, message: '请输入名字', trigger: 'blur' }
    ],
    sexName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    ethnic: [
      { required: true, message: '请选择民族', trigger: 'change' }
    ],
    businessName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    schoolName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    gradeName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    centerName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    cardName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    subjectName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    cardId: [
      { required: true, message: '', trigger: 'blur' }
    ],
    stuSchoolRollStatusName: [
      { required: true, message: '', trigger: 'blur' }
    ],
    // photo: [
    //   { validator: this.validatePhoto, required: true, message: '请上传照片', trigger: 'change' }
    // ],
    point: [
      { required: true, message: '', trigger: 'blur' }
    ]
  }

  private options: any = {
    ethnic: {
      url: '/fcs/nation/select',
      data: {
      }
    },
    study: {
      url: '/fcs/study/getStudySelect',
      data: {
        businessId: -1
      }
    },
    school: {
      url: '/fcs/school/getSchoolSelect',
      data: {
        // studyId: -1
      }
    },
    grade: {
      url: '/fcs/grade/getGradeSelect',
      data: {
        schoolId: -1
      }
    },
    subject: {
      url: '/fcs/subject/getSubjectSelect',
      data: {
        schoolId: -1
      }
    },
    center: {
      url: '/fcs/center/getCenterSelect',
      data: {
        isJoinUser: 0
      }
    },
    stuSource: {
      url: '/fcs/fcsoption/getOption?optionName=stuSource&businessId='
    }
  }

  private businessChange () {
    console.log(this.up)
    console.log(this.files)
    this.stuInfo.stuSchoolId = ''
    this.stuInfo.stuSubjectId = ''
    this.stuInfo.stuGradeId = ''
    this.stuInfo.stuSchoolDataKey = ''
    this.stuInfo.stuSubjectDataKey = ''
    this.stuInfo.stuGradeDataKey = ''
    this.stuInfo.stuBelongCenter = ''
    this.schoolItemData = []
    this.subjectItemData = []
    this.gradeItemData = []
    this.options.stuSource.url = '/fcs/fcsoption/getOption?optionName=stuSource&businessId=' + this.stuInfo.stuBusinessId
    this.options.center.data.businessId = this.stuInfo.stuBusinessId
    this.options.center.data.isJoinUser = 0;
    (this.$refs.center as any).getList();
    (this.$refs.stuSource as any).getList()
    this.getSchoolItem()
    this.getSubjectItem()
    this.getGradeItem()
  }

  private schoolChange () {
    this.stuInfo.stuSubjectId = ''
    this.stuInfo.stuGradeId = ''
    this.stuInfo.stuSubjectDataKey = ''
    this.stuInfo.stuGradeDataKey = ''
    this.subjectItemData = []
    this.gradeItemData = []
    this.getSubjectItem()
    this.getGradeItem()
  }

  private subjectchange (val: any) {
    console.log(val)
  }

  private async getDetail () {
    await stuDetail({
      id: this.stuId
    }).then((res: any) => {
      this.stuInfo = res.object.info
      this.getSchoolItem()
    }).catch((err: any) => {
      console.log('err', err)
    })
  }

  private submit () {
    this.submitForm.id = this.stuInfo.id,
    this.submitForm.stuPaperworkType = this.stuInfo.stuPaperworkType,
    this.submitForm.stuPaperworkNumber = this.stuInfo.stuPaperworkNumber,
    this.submitForm.stuPhone = this.stuInfo.stuPhone,
    this.submitForm.relativesMobile = this.stuInfo.relativesMobile,
    this.submitForm.stuName = this.stuInfo.stuName,
    this.submitForm.stuSex = this.stuInfo.stuSex,
    this.submitForm.stuEthnic = this.stuInfo.stuEthnic,
    this.submitForm.stuEthnicName = this.stuInfo.stuEthnicName,
    this.submitForm.stuBusinessId = this.stuInfo.stuBusinessId,
    this.submitForm.stuStudyId = this.stuInfo.stuSchoolDataKey.split('-')[3],
    this.submitForm.stuSchoolName = this.stuInfo.stuSchoolDataKey.split('-')[2],
    this.submitForm.stuSchoolId = this.stuInfo.stuSchoolDataKey.split('-')[0],
    this.submitForm.stuSchoolCode = this.stuInfo.stuSchoolDataKey.split('-')[1],
    this.submitForm.studyName = this.stuInfo.stuSchoolDataKey.split('-')[4],
    this.submitForm.stuGradeId = this.stuInfo.stuGradeDataKey.split('-')[0],
    this.submitForm.stuGradeCode = this.stuInfo.stuGradeDataKey.split('-')[1],
    this.submitForm.stuGradeName = this.stuInfo.stuGradeDataKey.split('-')[2],
    this.submitForm.stuSubjectId = this.stuInfo.stuSubjectDataKey.split('-')[0],
    this.submitForm.stuSubjectCode = this.stuInfo.stuSubjectDataKey.split('-')[1],
    this.submitForm.stuSubjectName = this.stuInfo.stuSubjectDataKey.split('-')[2],
    this.submitForm.stuSchoolRollStatus = this.stuInfo.stuSchoolRollStatus,
    this.submitForm.stuTwoEducation = '',
    this.submitForm.stuTwoEducationSchoolId = '',
    this.submitForm.stuTwoEducationSchoolCode = '',
    this.submitForm.stuTwoEducationSchoolName = '',
    this.submitForm.stuTwoEducationGradeId = '',
    this.submitForm.stuTwoEducationGradeCode = '',
    this.submitForm.stuTwoEducationGradeName = '',
    this.submitForm.stuTwoEducationSubjectId = '',
    this.submitForm.stuTwoEducationSubjectCode = '',
    this.submitForm.stuTwoEducationSubjectName = '',
    this.submitForm.stuTwoEducationSchoolRollStatus = '',
    this.submitForm.stuBelongCenter = this.stuInfo.stuBelongCenter,
    this.submitForm.stuBelongCenterName = this.stuInfo.stuBelongCenterName,
    this.submitForm.stuTeachingPoint = this.stuInfo.stuTeachingPoint,
    this.submitForm.stuSource = this.stuInfo.stuSource,
    this.submitForm.stuSourceName = this.stuInfo.stuSourceName,
    this.submitForm.stuExamNumber = this.stuInfo.stuExamNumber,
    this.submitForm.stuNumber = this.stuInfo.stuNumber,
    this.submitForm.stuAddress = this.stuInfo.stuAddress,
    this.submitForm.stuRemark = this.stuInfo.stuRemark,
    this.submitForm.attachment = this.stuInfo.attachment
    console.log(this.submitForm)
  }

  private onClose () {
    this.stuInfo = {}
    this.schoolItemData = []
    this.subjectItemData = []
    this.gradeItemData = []
    this.submitForm = {
      id: '',
      stuPaperworkType: '',
      stuPaperworkNumber: '',
      stuPhone: '',
      relativesMobile: '',
      stuName: '',
      stuSex: '',
      stuEthnic: '',
      stuEthnicName: '',
      stuBusinessId: '',
      stuStudyId: '',
      stuSchoolName: '',
      stuSchoolId: '',
      stuSchoolCode: '',
      studyName: '',
      stuGradeId: '',
      stuGradeCode: '',
      stuGradeName: '',
      stuSubjectId: '',
      stuSubjectCode: '',
      stuSubjectName: '',
      stuSchoolRollStatus: '',
      stuTwoEducation: '',
      stuTwoEducationSchoolId: '',
      stuTwoEducationSchoolCode: '',
      stuTwoEducationSchoolName: '',
      stuTwoEducationGradeId: '',
      stuTwoEducationGradeCode: '',
      stuTwoEducationGradeName: '',
      stuTwoEducationSubjectId: '',
      stuTwoEducationSubjectCode: '',
      stuTwoEducationSubjectName: '',
      stuTwoEducationSchoolRollStatus: '',
      stuBelongCenter: '',
      stuBelongCenterName: '',
      stuTeachingPoint: '',
      stuSource: '',
      stuSourceName: '',
      stuExamNumber: '',
      stuNumber: '',
      stuAddress: '',
      stuRemark: '',
      attachment: {
        originalName: '',
        fileNewName: '',
        filePath: '',
        fileSize: '',
        fileSuffix: ''
      }
    }
    this.$emit('update:visible', false)
  }

  mounted () {
    (this.$refs.ethnic as any).getList()
  }

  public open (): void {
    this.getConstant('businessType')
    this.getConstant('subjectLen')
    this.getConstant('subjectDegree')
    this.getDetail();
    (this.$refs.center as any).getList();
    (this.$refs.stuSource as any).getList()
  }
}
</script>

<style lang='scss'>
</style>
