<!-- 新增 -->
<template>
  <hs-dialog title="代理结算" :visible.sync="visibleSync" width="60%" :close-on-click-modal="!1" @open="open">
    <div class="proxy-settlement-add-container">
      <hs-table ref="hsTable" :data="data.list" :border="!0" header-row-class-name="header-style">
        <hs-table-column prop="stuName" label="学生姓名"></hs-table-column>
        <hs-table-column prop="schoolName" width="170" label="院校名称【学习类型】"></hs-table-column>
        <hs-table-column prop="grageName" label="年级"></hs-table-column>
        <hs-table-column prop="subjectName" label="专业"></hs-table-column>
        <hs-table-column prop="xjzt" label="学籍状态"></hs-table-column>
        <hs-table-column prop="ysje" label="已收金额"></hs-table-column>
        <hs-table-column prop="yetf" label="结算金额">
          <template slot-scope="scope">
            <hs-input v-money size="mini" v-model.trim="data.list[scope.$index].settlementMoney"></hs-input>
          </template>
        </hs-table-column>
      </hs-table>
      <div class="footer">
        <static-item label="结算时间" :width="300">
          <el-date-picker
            v-show="action !== 'view'"
            v-model="form.settlementTime"
            type="datetime"
            format="yyyy-MM-dd HH:mm:ss"
            size="mini"
            value-format="timestamp"
            placeholder="选择日期时间">
          </el-date-picker>
        </static-item>
        <static-item label="结算备注" :width="300">
          <hs-input style="margin: 6px 0;" v-money size="mini" v-model.trim="form.memo"></hs-input>
        </static-item>
        <el-button type="primary" size="mini" :loading="saveLoading" icon="hs-icon-plus" @click="onSave">结算</el-button>
        <el-button size="mini" @click="visibleSync = !1" icon="hs-icon-close" >关闭</el-button>
      </div>
    </div>
  </hs-dialog>
</template>

<script lang="ts">

import { Component, Prop, PropSync, Vue } from 'vue-property-decorator'
import { settlementApi } from '@/api/settlement'
import StaticItem from '@/components/busi/staticitem.vue'
import { type } from 'os'

@Component({
  name: 'feeitem-add',
  components: {
    StaticItem
  }
})

export default class ProxySettlementAdd extends Vue {
  @PropSync('visible', { type: Boolean, default: !1 })
  private visibleSync!: boolean

  @Prop({ type: Object })
  private params!: object|any

  private data = {
    list: [],
    totalCount: 0
  }

  private saveLoading = !1

  private form = {
    memo: '',
    settlementTime: ''
  }

  private async onSave () {
    const params: any = []
    if (this.form.memo) {
      this.$alert('请输入结算备注', { type: 'error' })
      return
    }
    if (this.form.settlementTime) {
      this.$alert('请输入结算时间', { type: 'error' })
      return
    }
    this.data.list.map((v: any) => {
      params.push({
        acceptedMoney: v.acceptedMoney,
        businessId: v.businessId,
        businessName: v.businessName,
        gradeId: v.gradeId,
        gradeName: v.gradeName,
        paperworkNumber: v.paperworkNumber,
        phone: v.phone,
        proId: v.proId,
        proName: v.proName,
        schoolId: v.schoolId,
        schoolName: v.schoolName,
        settlementMoney: v.settlementMoney,
        settlementState: v.settlementState,
        stuId: v.stuId,
        stuName: v.stuName,
        studyId: v.studyId,
        studyName: v.studyName,
        subId: v.subId,
        subName: v.subName,
        memo: this.form.memo,
        settlementTime: this.form.settlementTime
      })
    })
    await settlementApi('settlementUntreatedInsert', params).then((res: any) => {
      if (res.code === 10000) {
        this.$message.success(res.message)
        this.visibleSync = !1
        this.$listeners['save-back'] && this.$emit('save-back')
      } else if (res.code === -10000) {
        this.$alert(res.message, { type: 'error' })
      }
    })
  }

  private async open () {
    this.form = Object.assign(this.form, this.params)
    await settlementApi('settlementUntreatedSettlementPage', {
      ...this.form
    }).then((res: any) => {
      if (res.code === 10000) {
        this.data.list = res.object.list
        this.data.totalCount = res.object.totalCount
      }
    })
  }
}
</script>
<style lang="scss">
  .proxy-settlement-add-container{
    width: 100%;
    min-width: 500px;
    height: 100%;
    display: flex;
    flex-direction: column;
    .footer{
      display: flex;
      align-items: center;
      background-color: #FAFAFA;
      padding: 10px;
      margin-top: -10px;
      border-left: 1px solid #EBEEF5;
      border-right: 1px solid #EBEEF5;
      border-bottom: 1px solid #EBEEF5;
      .el-button{
        margin-left: 10px;
      }
    }
  }
  .el-picker-panel{
    z-index: 2025 !important;
  }
</style>
