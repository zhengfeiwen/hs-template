import { isType, urlParamsParse } from './common'
import { moneyStandardization } from './dicts/money'
import { dictStandardization } from './dicts/constdict'
import qs from 'qs'

// 数组数据标准化工厂入口
const arrayFormat = (list: any, type: any) => {
  if (list.length === 0) return list
  if (type === 'money') return list.map((obj: any) => objFormatMoney(obj))
  if (type === 'dict') return list.map((obj: any) => objFormatDict(obj))
}

// 根据数据类型转化数据
const typeFormat = (val: any) => {
  if (isType(val, 'string')) return urlParamsParse(val)
  if (isType(val, 'object')) return { ... val }
  return val
}

// 金额格式化
const objFormatMoney = (obj: any) => {
  if (Object.keys(obj).length === 0) return obj
  let _obj = typeFormat(obj)
  Object.keys(_obj).map((key: any) => {
    // money
    _obj[key] = moneyStandardization(key, _obj[key], 0.01)
  })
  return isType(obj, 'string') ? qs.stringify(_obj) : _obj
}

// 字典格式化
const objFormatDict = (obj: any) => {
  if (Object.keys(obj).length === 0) return obj
  let _obj = typeFormat(obj)
  Object.keys(_obj).map((key: any) => {
    // dict
    _obj = dictStandardization(key, _obj)
  })
  return isType(obj, 'string') ? qs.stringify(_obj) : _obj
}

// 标准化工厂
export const standardization = (obj: any, format: any) => {
  if (!obj) return obj
  let _obj = obj
  const formats = format.split('|')
  formats.map((_format: any) => {
    if (_format === 'array:money') _obj = arrayFormat(obj, 'money')
    if (_format === 'object:money') _obj = objFormatMoney(obj)
    if (_format === 'array:dict') _obj = arrayFormat(obj, 'dict')
    if (_format === 'object:dict') _obj = objFormatDict(obj)
  })
  return _obj
}
