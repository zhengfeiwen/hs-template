<template>
  <div class="history-intercourse-dialog-container">
    <el-dialog append-to-body :close-on-click-modal="!1" title="历史往来" :visible.sync="visible" :before-close="onClose" @open="open()">
      <simple-table :isCheckbox="!1" :data="tableData" :columns="columns" :loading="loading" @query="onQuery" :pagination="!1" :columnable="!1">
        <template slot="custom_intercourseDetail" slot-scope="{ scope }">
            <hs-button
                @click.native.prevent="showHistoryIntercourseDetailDetail(scope.row)"
                type="text"
                size="small">
                详情
            </hs-button>
        </template>
      </simple-table>
      <div slot="footer" class="dialog-footer">
        <el-button type="info" plain @click="onClose">关闭</el-button>
      </div>
    </el-dialog>
    <HistoryIntercourseDetailDialog :stuId="stuId" :data="HistoryIntercourseDetailDialogDetail" :visible.sync="HistoryIntercourseDetailDialogVisible"></HistoryIntercourseDetailDialog>
  </div>
</template>
<script lang='ts'>
import { Component, Prop, Vue } from 'vue-property-decorator'
import SimpleTable from '@/components/busi/table/simple-table.vue'
import HistoryIntercourseDetailDialog from '@/views/student/components/PersonalIntercourse/HistoryIntercourseDialog/HistoryIntercourseDetailDialog/index.vue'
import { studentApi } from '@/api/studentcenter'
@Component({
  name: 'student-baseinfo',
  components: {
    SimpleTable,
    HistoryIntercourseDetailDialog
  }
})
export default class extends Vue {
  @Prop({ default: false }) private stuId!: number;

  @Prop({ default: false }) private visible!: boolean;

  private HistoryIntercourseDetailDialogDetail = {}

  private loading = !1

  private tableData = {
    list: []
  }

  private columns = [{
    prop: 'businessName',
    label: '业务'
  },
  {
    prop: 'schoolName',
    label: '院校'
  },
  {
    prop: 'gradeName',
    label: '年级'
  },
  {
    prop: 'subjectName',
    label: '专业'
  },
  {
    prop: 'intercourseDetail',
    label: '来往明细',
    custom: !0
  }]
  // {
  //   prop: 'abnormalTurnRecord',
  //   label: '异动结转记录',
  //   custom: !0
  // }]

  private async onQuery () {
    this.loading = !0
    await studentApi('stuHistoryContactsList', {
      stuId: this.stuId
    }).then((res: any) => {
      this.loading = !1
      this.tableData.list = res.object.list
    }).catch((err: any) => {
      console.log('err', err)
      this.loading = !1
    })
  }

  private onClose () {
    this.$emit('update:visible', false)
  }

  private AbnormalTurnRecordDialogFormVisible = false;

  private showAbnormalTurnRecordDetail (row: any) {
    this.AbnormalTurnRecordDialogFormVisible = true
  }

  private HistoryIntercourseDetailDialogVisible = false;

  private showHistoryIntercourseDetailDetail (row: any) {
    this.HistoryIntercourseDetailDialogDetail = row
    this.HistoryIntercourseDetailDialogVisible = true
  }

  public open (): void {
    this.onQuery()
  }
}
</script>

<style lang='scss'>
// @import "./index";
</style>
